### =======================================
### VARIABLES
### =======================================
@baseUrl = https://ecommerce-laj7.onrender.com
@token = <your_access_token_here>

### =======================================
### 1. USER AUTHENTICATION
### =======================================

### (1) Register a new Customer.
# @name registerCustomer
POST {{baseUrl}}/users/register/
Content-Type: application/json

{
    "username": "new_customer",
    "email": "customer@example.com",
    "password": "strongpassword123",
    "role": "customer"
}

### Response Sample: HTTP/1.1 201 Created
# {
#     "id": 2,
#     "username": "new_customer",
#     "email": "customer@example.com",
#     "role": "customer"
# }

### (2) Login to get JWT access and refresh tokens.
# @name login
POST {{baseUrl}}/users/login/
Content-Type: application/json

{
    "username": "new_customer",
    "password": "strongpassword123"
}

### Response Sample: HTTP/1.1 200 OK
# {
#     "access": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
#     "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
# }

### (3) Get the current user's profile (Requires Authentication).
GET {{baseUrl}}/users/profile/
Authorization: Bearer {{token}}

### Response Sample: HTTP/1.1 200 OK
# {
#     "id": 2,
#     "username": "new_customer",
#     "email": "customer@example.com",
#     "role": "customer"
# }

### =======================================
### 2. PRODUCTS
### =======================================

### (4) List all available products (Public access).
GET {{baseUrl}}/products/

### Response Sample: HTTP/1.1 200 OK
# [
#     {
#         "id": 1,
#         "owner": 1,
#         "name": "Artisan Coffee Beans",
#         "category": "Groceries",
#         "price": "22.50",
#         "description": "Roasted in small batches.",
#         "stock": 50,
#         "created_at": "2025-09-08T10:00:00Z",
#         "updated_at": "2025-09-08T10:00:00Z"
#     }
# ]

### (5) Create a new product (Requires Merchant or Admin role).
# @name createProduct
POST {{baseUrl}}/products/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "name": "Organic Matcha Tea",
    "category": "Beverages",
    "price": "29.99",
    "description": "Ceremonial grade matcha from Japan.",
    "stock": 100
}

### Response Sample: HTTP/1.1 201 Created
# {
#     "id": 2,
#     "owner": 1,
#     "name": "Organic Matcha Tea",
#     ...
# }

### (6) Generate an AI-powered description for a product (Requires Owner or Admin role).
POST {{baseUrl}}/products/2/generate_description/
Authorization: Bearer {{token}}

### Response Sample: HTTP/1.1 200 OK
# {
#     "id": 2,
#     "description": "Experience the vibrant, rich taste of authentic ceremonial grade matcha, sourced directly from the finest tea fields of Uji, Japan. This finely milled powder offers a smooth, mellow flavor with a hint of natural sweetness, perfect for your daily ritual.",
#     ...
# }

### =======================================
### 3. CART & ORDERS
### =======================================

### (7) Add an item to the shopping cart (Requires Authentication).
POST {{baseUrl}}/cart/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "product_id": 2,
    "quantity": 1
}

### Response Sample: HTTP/1.1 201 Created
# {
#     "id": 1,
#     "product": { ... full product details ... },
#     "quantity": 1,
#     "created_at": "2025-09-08T11:00:00Z"
# }

### (8) View the current contents of the cart.
GET {{baseUrl}}/cart/
Authorization: Bearer {{token}}

### Response Sample: HTTP/1.1 200 OK
# [
#     {
#         "id": 1,
#         "product": { ... },
#         "quantity": 1,
#         ...
#     }
# ]

### (9) Place an order using the items in the cart.
# @name placeOrder
POST {{baseUrl}}/cart/place-order/
Authorization: Bearer {{token}}

### Response Sample: HTTP/1.1 201 Created
# {
#     "id": 1,
#     "order_items_snapshot": [
#         {"product_name": "Organic Matcha Tea", "quantity": 1, "price": "29.99"}
#     ],
#     "total_price": "29.99",
#     "status": "Pending",
#     "created_at": "2025-09-08T12:00:00Z",
#     "user": 2
# }

### =======================================
### 4. PAYMENTS
### =======================================

### (10) Initiate a payment for a placed order.
# @name initiatePayment
POST {{baseUrl}}/payments/
Authorization: Bearer {{token}}
Content-Type: application/json

{
    "order_id": 1
}

### Response Sample: HTTP/1.1 201 Created
# {
#     "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
#     "order": { ... full order details ... },
#     "status": "Pending",
#     "created_at": "2025-09-08T12:05:00Z",
#     "updated_at": "2025-09-08T12:05:00Z"
# }

### (11) MOCK WEBHOOK: A payment provider confirms the payment was successful.
POST {{baseUrl}}/payments/webhook/
Content-Type: application/json

{
    "payment_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
    "event_type": "payment.succeeded"
}

### Response Sample: HTTP/1.1 200 OK
# {
#     "status": "webhook received"
# }

### (12) Check the final status of the payment.
GET {{baseUrl}}/payments/a1b2c3d4-e5f6-7890-1234-567890abcdef/
Authorization: Bearer {{token}}

### Response Sample: HTTP/1.1 200 OK
# {
#     "id": "a1b2c3d4-e5f6-7890-1234-567890abcdef",
#     "order": {
#         "id": 1,
#         "status": "Completed",  // <-- Note the status change
#         ...
#     },
#     "status": "Success", // <-- Note the status change
#     ...
# }